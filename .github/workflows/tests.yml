name: CI
on:
  pull_request:
    branches: [ master ]
jobs:
  cd:
    name: Tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: template
          POSTGRES_PASSWORD: t3mpl473
          POSTGRES_DB: template
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Create code coverage status for the current commit
        run: |
          curl "https://{GITHUB_USER}:${GITHUB_TOKEN}@api.github.com/repos/${GITHUB_REPOSITORY}/statuses/${COMMIT_SHA}" -d "{\"state\": \"pending\",\"target_url\": \"https://github.com/${GITHUB_REPOSITORY}/pull/${PULL_NUMBER}/checks?check_run_id=${GITHUB_RUN_ID}\",\"description\": \"\",\"context\": \"Coverage\"}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_USER: ${{ secrets.GITHUB_USER }}
          COMMIT_SHA: ${{ github.event.pull_request.head.sha }}
          PULL_NUMBER: ${{ github.event.pull_request.number }}
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.13
        id: go
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - name: Test
        run: |
          CVPKG=$(go list ./... | grep -v mocks | tr '\n' ',')
          go test -coverpkg=${CVPKG} -coverprofile=coverage.out -covermode=count  ./...
      - name: Publish code cov
        uses: actions/upload-artifact@v2
        with:
          name: code covarege report
          path: coverage.out
      - name: Generate covarege Status
        run: |
          set -x
          total=`go tool cover -func=coverage.out | grep total | grep -Eo '[0-9]+\.[0-9]+'`
          echo "Total Coverage: $total"
          (( $(echo "$total > $MIN_COV" | bc -l) )) && STATE=success || STATE=failure
          curl "https://${GITHUB_USER}:${GITHUB_TOKEN}@api.github.com/repos/${GITHUB_REPOSITORY}/statuses/${COMMIT_SHA}" -d "{\"state\":\"${STATE}\",\"target_url\":\"https://github.com/${GITHUB_REPOSITORY}/pull/${PULL_NUMBER}/checks?check_run_id=${GITHUB_RUN_ID}\",\"description\":\"${total}% / ${MIN_COV}%\",\"context\":\"Coverage\"}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_USER: ${{ secrets.GITHUB_USER }}
          COMMIT_SHA: ${{ github.event.pull_request.head.sha }}
          PULL_NUMBER: ${{ github.event.pull_request.number }}
          MIN_COV: 60